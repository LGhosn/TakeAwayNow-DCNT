<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.dcnt.take_away_now.service.PlanServiceTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2024-02-21T05:29:00" hostname="LGG-W10" time="1.045">
  <properties/>
  <testcase name="noSePuedeCrearDosPlanesConElMismoNombre()" classname="com.dcnt.take_away_now.service.PlanServiceTest" time="0.863"/>
  <testcase name="sePuedenEncontrarUnPlanesQueExistes()" classname="com.dcnt.take_away_now.service.PlanServiceTest" time="0.031"/>
  <testcase name="sePuedeCrearPlanNuevo()" classname="com.dcnt.take_away_now.service.PlanServiceTest" time="0.031"/>
  <testcase name="noSePuedeEncontrarUnPlanQueNoExiste()" classname="com.dcnt.take_away_now.service.PlanServiceTest" time="0.023"/>
  <testcase name="sePuedeEliminarUnPlanExistente()" classname="com.dcnt.take_away_now.service.PlanServiceTest" time="0.082"/>
  <system-out><![CDATA[02:28:53.593 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.dcnt.take_away_now.service.PlanServiceTest]: PlanServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
02:28:53.997 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.dcnt.take_away_now.TakeAwayNowApplication for test class com.dcnt.take_away_now.service.PlanServiceTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2024-02-21T02:28:54.678-03:00  INFO 2036 --- [    Test worker] c.d.t.service.PlanServiceTest            : Starting PlanServiceTest using Java 17.0.9 with PID 2036 (started by Lautaro in D:\dcnt back\TakeAwayNow-DCNT)
2024-02-21T02:28:54.680-03:00  INFO 2036 --- [    Test worker] c.d.t.service.PlanServiceTest            : No active profile set, falling back to 1 default profile: "default"
2024-02-21T02:28:55.322-03:00  INFO 2036 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-02-21T02:28:55.448-03:00  INFO 2036 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 112 ms. Found 7 JPA repository interfaces.
2024-02-21T02:28:55.622-03:00  INFO 2036 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2024-02-21T02:28:55.876-03:00  INFO 2036 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:1aebfeec-e335-411c-b968-3d76d2ad4f43;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2024-02-21T02:28:56.278-03:00  INFO 2036 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-02-21T02:28:56.447-03:00  INFO 2036 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.3.1.Final
2024-02-21T02:28:56.554-03:00  INFO 2036 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-02-21T02:28:57.062-03:00  INFO 2036 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-02-21T02:28:57.157-03:00  WARN 2036 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-02-21T02:28:58.942-03:00  INFO 2036 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists clientes cascade 
Hibernate: 
    drop table if exists inventario_registros cascade 
Hibernate: 
    drop table if exists negocios cascade 
Hibernate: 
    drop table if exists pedidos cascade 
Hibernate: 
    drop table if exists planes cascade 
Hibernate: 
    drop table if exists productos cascade 
Hibernate: 
    drop table if exists productos_pedidos cascade 
Hibernate: 
    create table clientes (
        fecha_nacimiento date,
        fecha_ult_uso_benef_cumple date,
        pdc float(53),
        saldo numeric(38,2),
        id_cliente bigint generated by default as identity,
        id_plan bigint,
        usuario varchar(255),
        primary key (id_cliente)
    )
Hibernate: 
    create table inventario_registros (
        precio_unitario numeric(38,2),
        precio_unitario_pdc float(53),
        recompensa_pdc float(53),
        id_inventario_registro bigint generated by default as identity,
        id_negocio bigint,
        id_producto bigint unique,
        stock bigint,
        primary key (id_inventario_registro)
    )
Hibernate: 
    create table negocios (
        dia_apertura tinyint check (dia_apertura between 0 and 6),
        dia_cierre tinyint check (dia_cierre between 0 and 6),
        horario_apertura time(6),
        horario_cierre time(6),
        saldo numeric(38,2),
        id_negocio bigint generated by default as identity,
        nombre varchar(255),
        primary key (id_negocio)
    )
Hibernate: 
    create table pedidos (
        estado tinyint check (estado between 0 and 7),
        precio_total numeric(38,2),
        fecha_y_hora_entrega timestamp(6),
        id_cliente bigint,
        id_negocio bigint,
        id_pedido bigint generated by default as identity,
        codigo varchar(255),
        primary key (id_pedido)
    )
Hibernate: 
    create table planes (
        cancelacion_sin_costo boolean,
        multiplicador_de_puntos_de_confianza integer,
        porcentaje_de_descuento integer,
        porcentaje_extra_de_puntos_de_confianza_por_devolucion integer,
        precio numeric(38,2),
        puntos_de_confianza_por_subscripcion float(53),
        id_plan bigint generated by default as identity,
        nombre varchar(255),
        primary key (id_plan)
    )
Hibernate: 
    create table productos (
        id_inventario_registro bigint unique,
        id_producto bigint generated by default as identity,
        nombre varchar(255),
        primary key (id_producto)
    )
Hibernate: 
    create table productos_pedidos (
        cantidad integer,
        id_pedido bigint,
        id_producto bigint,
        id_producto_pedido bigint generated by default as identity,
        primary key (id_producto_pedido)
    )
Hibernate: 
    alter table if exists inventario_registros 
       add constraint FKgk0emireeu3u0g15pi6uth3tw 
       foreign key (id_negocio) 
       references negocios
Hibernate: 
    alter table if exists inventario_registros 
       add constraint FKaa8b1cqh28krjla4q0rldgjdw 
       foreign key (id_producto) 
       references productos
Hibernate: 
    alter table if exists pedidos 
       add constraint FKdnomiluem4t3x66t6b9aher47 
       foreign key (id_cliente) 
       references clientes
Hibernate: 
    alter table if exists pedidos 
       add constraint FKhmtsw5m7flxgsvx60sorc5g3e 
       foreign key (id_negocio) 
       references negocios
Hibernate: 
    alter table if exists productos 
       add constraint FKd8x4sfyyvh5ecf784239ete7u 
       foreign key (id_inventario_registro) 
       references inventario_registros
Hibernate: 
    alter table if exists productos_pedidos 
       add constraint FKgvy13jpycywx60hasm7k3w2f 
       foreign key (id_pedido) 
       references pedidos
Hibernate: 
    alter table if exists productos_pedidos 
       add constraint FK5xwq1xi3k07xrjjpvvpxvdoku 
       foreign key (id_producto) 
       references productos
2024-02-21T02:28:59.061-03:00  INFO 2036 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-02-21T02:28:59.873-03:00  INFO 2036 --- [    Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-02-21T02:29:00.828-03:00  INFO 2036 --- [    Test worker] c.d.t.service.PlanServiceTest            : Started PlanServiceTest in 6.637 seconds (process running for 8.757)
Hibernate: 
    select
        p1_0.id_plan,
        p1_0.cancelacion_sin_costo,
        p1_0.porcentaje_de_descuento,
        p1_0.multiplicador_de_puntos_de_confianza,
        p1_0.nombre,
        p1_0.porcentaje_extra_de_puntos_de_confianza_por_devolucion,
        p1_0.precio,
        p1_0.puntos_de_confianza_por_subscripcion 
    from
        planes p1_0 
    where
        p1_0.nombre=?
Hibernate: 
    insert 
    into
        planes
        (cancelacion_sin_costo, porcentaje_de_descuento, multiplicador_de_puntos_de_confianza, nombre, porcentaje_extra_de_puntos_de_confianza_por_devolucion, precio, puntos_de_confianza_por_subscripcion, id_plan) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        p1_0.id_plan,
        p1_0.cancelacion_sin_costo,
        p1_0.porcentaje_de_descuento,
        p1_0.multiplicador_de_puntos_de_confianza,
        p1_0.nombre,
        p1_0.porcentaje_extra_de_puntos_de_confianza_por_devolucion,
        p1_0.precio,
        p1_0.puntos_de_confianza_por_subscripcion 
    from
        planes p1_0 
    where
        p1_0.nombre=?
Hibernate: 
    select
        p1_0.id_plan,
        p1_0.cancelacion_sin_costo,
        p1_0.porcentaje_de_descuento,
        p1_0.multiplicador_de_puntos_de_confianza,
        p1_0.nombre,
        p1_0.porcentaje_extra_de_puntos_de_confianza_por_devolucion,
        p1_0.precio,
        p1_0.puntos_de_confianza_por_subscripcion 
    from
        planes p1_0 
    where
        p1_0.nombre=?
Hibernate: 
    insert 
    into
        planes
        (cancelacion_sin_costo, porcentaje_de_descuento, multiplicador_de_puntos_de_confianza, nombre, porcentaje_extra_de_puntos_de_confianza_por_devolucion, precio, puntos_de_confianza_por_subscripcion, id_plan) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        p1_0.id_plan,
        p1_0.cancelacion_sin_costo,
        p1_0.porcentaje_de_descuento,
        p1_0.multiplicador_de_puntos_de_confianza,
        p1_0.nombre,
        p1_0.porcentaje_extra_de_puntos_de_confianza_por_devolucion,
        p1_0.precio,
        p1_0.puntos_de_confianza_por_subscripcion 
    from
        planes p1_0 
    where
        p1_0.nombre=?
Hibernate: 
    insert 
    into
        planes
        (cancelacion_sin_costo, porcentaje_de_descuento, multiplicador_de_puntos_de_confianza, nombre, porcentaje_extra_de_puntos_de_confianza_por_devolucion, precio, puntos_de_confianza_por_subscripcion, id_plan) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        p1_0.id_plan,
        p1_0.cancelacion_sin_costo,
        p1_0.porcentaje_de_descuento,
        p1_0.multiplicador_de_puntos_de_confianza,
        p1_0.nombre,
        p1_0.porcentaje_extra_de_puntos_de_confianza_por_devolucion,
        p1_0.precio,
        p1_0.puntos_de_confianza_por_subscripcion 
    from
        planes p1_0
Hibernate: 
    select
        p1_0.id_plan,
        p1_0.cancelacion_sin_costo,
        p1_0.porcentaje_de_descuento,
        p1_0.multiplicador_de_puntos_de_confianza,
        p1_0.nombre,
        p1_0.porcentaje_extra_de_puntos_de_confianza_por_devolucion,
        p1_0.precio,
        p1_0.puntos_de_confianza_por_subscripcion 
    from
        planes p1_0 
    where
        p1_0.nombre=?
Hibernate: 
    insert 
    into
        planes
        (cancelacion_sin_costo, porcentaje_de_descuento, multiplicador_de_puntos_de_confianza, nombre, porcentaje_extra_de_puntos_de_confianza_por_devolucion, precio, puntos_de_confianza_por_subscripcion, id_plan) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        p1_0.id_plan,
        p1_0.cancelacion_sin_costo,
        p1_0.porcentaje_de_descuento,
        p1_0.multiplicador_de_puntos_de_confianza,
        p1_0.nombre,
        p1_0.porcentaje_extra_de_puntos_de_confianza_por_devolucion,
        p1_0.precio,
        p1_0.puntos_de_confianza_por_subscripcion 
    from
        planes p1_0 
    where
        p1_0.nombre=?
Hibernate: 
    select
        p1_0.id_plan,
        p1_0.cancelacion_sin_costo,
        p1_0.porcentaje_de_descuento,
        p1_0.multiplicador_de_puntos_de_confianza,
        p1_0.nombre,
        p1_0.porcentaje_extra_de_puntos_de_confianza_por_devolucion,
        p1_0.precio,
        p1_0.puntos_de_confianza_por_subscripcion 
    from
        planes p1_0
Hibernate: 
    select
        p1_0.id_plan,
        p1_0.cancelacion_sin_costo,
        p1_0.porcentaje_de_descuento,
        p1_0.multiplicador_de_puntos_de_confianza,
        p1_0.nombre,
        p1_0.porcentaje_extra_de_puntos_de_confianza_por_devolucion,
        p1_0.precio,
        p1_0.puntos_de_confianza_por_subscripcion 
    from
        planes p1_0 
    where
        p1_0.nombre=?
Hibernate: 
    insert 
    into
        planes
        (cancelacion_sin_costo, porcentaje_de_descuento, multiplicador_de_puntos_de_confianza, nombre, porcentaje_extra_de_puntos_de_confianza_por_devolucion, precio, puntos_de_confianza_por_subscripcion, id_plan) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        p1_0.id_plan,
        p1_0.cancelacion_sin_costo,
        p1_0.porcentaje_de_descuento,
        p1_0.multiplicador_de_puntos_de_confianza,
        p1_0.nombre,
        p1_0.porcentaje_extra_de_puntos_de_confianza_por_devolucion,
        p1_0.precio,
        p1_0.puntos_de_confianza_por_subscripcion 
    from
        planes p1_0 
    where
        p1_0.nombre=?
Hibernate: 
    delete 
    from
        planes 
    where
        id_plan=?
Hibernate: 
    select
        p1_0.id_plan,
        p1_0.cancelacion_sin_costo,
        p1_0.porcentaje_de_descuento,
        p1_0.multiplicador_de_puntos_de_confianza,
        p1_0.nombre,
        p1_0.porcentaje_extra_de_puntos_de_confianza_por_devolucion,
        p1_0.precio,
        p1_0.puntos_de_confianza_por_subscripcion 
    from
        planes p1_0 
    where
        p1_0.nombre=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
